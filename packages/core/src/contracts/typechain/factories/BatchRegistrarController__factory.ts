/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BatchRegistrarController,
  BatchRegistrarControllerInterface,
} from "../BatchRegistrarController";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IBaseRegistrarController",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "names",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "tlds",
        type: "bytes[]",
      },
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint64[]",
        name: "expiry",
        type: "uint64[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBaseRegistrarController",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "names",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "tlds",
        type: "bytes[]",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint64[]",
        name: "expiry",
        type: "uint64[]",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBaseRegistrarController",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "names",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "tlds",
        type: "bytes[]",
      },
      {
        internalType: "uint64[]",
        name: "expiry",
        type: "uint64[]",
      },
      {
        internalType: "uint256[]",
        name: "prices",
        type: "uint256[]",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IBaseRegistrarController",
        name: "controller",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "names",
        type: "bytes[]",
      },
      {
        internalType: "bytes[]",
        name: "tlds",
        type: "bytes[]",
      },
      {
        internalType: "uint64[]",
        name: "expiry",
        type: "uint64[]",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d9e806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806345ad798114610051578063858d563714610066578063b841eb9e14610079578063f34148221461008c575b600080fd5b61006461005f366004610834565b61009f565b005b61006461007436600461093b565b610224565b610064610087366004610a1c565b610377565b61006461009a366004610ab7565b610478565b845186511480156100b1575083518551145b80156100be575082518451145b80156100cb575081518351145b80156100d8575080518251145b6100fd5760405162461bcd60e51b81526004016100f490610b67565b60405180910390fd5b60005b865181101561021a57876001600160a01b031663990c825488838151811061012a5761012a610b8d565b602002602001015188848151811061014457610144610b8d565b602002602001015188858151811061015e5761015e610b8d565b602002602001015188868151811061017857610178610b8d565b602002602001015188878151811061019257610192610b8d565b60200260200101518888815181106101ac576101ac610b8d565b60200260200101516040518763ffffffff1660e01b81526004016101d596959493929190610be9565b600060405180830381600087803b1580156101ef57600080fd5b505af1158015610203573d6000803e3d6000fd5b50505050808061021290610c55565b915050610100565b5050505050505050565b83518551148015610236575082518451145b8015610243575081518351145b8015610250575080518251145b61026c5760405162461bcd60e51b81526004016100f490610b67565b60005b855181101561036e57866001600160a01b03166357d19d3887838151811061029957610299610b8d565b60200260200101518784815181106102b3576102b3610b8d565b60200260200101518785815181106102cd576102cd610b8d565b60200260200101518786815181106102e7576102e7610b8d565b602002602001015187878151811061030157610301610b8d565b60200260200101516040518663ffffffff1660e01b8152600401610329959493929190610c7c565b600060405180830381600087803b15801561034357600080fd5b505af1158015610357573d6000803e3d6000fd5b50505050808061036690610c55565b91505061026f565b50505050505050565b81518351148015610389575080518251145b6103a55760405162461bcd60e51b81526004016100f490610b67565b60005b835181101561047157846001600160a01b031663e9579c2e8583815181106103d2576103d2610b8d565b60200260200101518584815181106103ec576103ec610b8d565b602002602001015185858151811061040657610406610b8d565b60200260200101516040518463ffffffff1660e01b815260040161042c93929190610cd7565b600060405180830381600087803b15801561044657600080fd5b505af115801561045a573d6000803e3d6000fd5b50505050808061046990610c55565b9150506103a8565b5050505050565b8251845114801561048a575080518351145b6104a65760405162461bcd60e51b81526004016100f490610b67565b60005b845181101561057457856001600160a01b031663b4f7f2488683815181106104d3576104d3610b8d565b60200260200101518684815181106104ed576104ed610b8d565b60200260200101518686868151811061050857610508610b8d565b60200260200101516040518563ffffffff1660e01b815260040161052f9493929190610d17565b600060405180830381600087803b15801561054957600080fd5b505af115801561055d573d6000803e3d6000fd5b50505050808061056c90610c55565b9150506104a9565b505050505050565b6001600160a01b038116811461059157600080fd5b50565b803561059f8161057c565b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156105e3576105e36105a4565b604052919050565b600067ffffffffffffffff821115610605576106056105a4565b5060051b60200190565b6000601f838184011261062157600080fd5b82356020610636610631836105eb565b6105ba565b82815260059290921b8501810191818101908784111561065557600080fd5b8287015b848110156106ec57803567ffffffffffffffff8082111561067a5760008081fd5b818a0191508a603f83011261068f5760008081fd5b858201356040828211156106a5576106a56105a4565b6106b6828b01601f191689016105ba565b92508183528c818386010111156106cd5760008081fd5b8181850189850137506000908201870152845250918301918301610659565b50979650505050505050565b600082601f83011261070957600080fd5b81356020610719610631836105eb565b82815260059290921b8401810191818101908684111561073857600080fd5b8286015b8481101561075c57803561074f8161057c565b835291830191830161073c565b509695505050505050565b600082601f83011261077857600080fd5b81356020610788610631836105eb565b82815260059290921b840181019181810190868411156107a757600080fd5b8286015b8481101561075c57803567ffffffffffffffff811681146107cc5760008081fd5b83529183019183016107ab565b600082601f8301126107ea57600080fd5b813560206107fa610631836105eb565b82815260059290921b8401810191818101908684111561081957600080fd5b8286015b8481101561075c578035835291830191830161081d565b600080600080600080600060e0888a03121561084f57600080fd5b61085888610594565b9650602088013567ffffffffffffffff8082111561087557600080fd5b6108818b838c0161060f565b975060408a013591508082111561089757600080fd5b6108a38b838c0161060f565b965060608a01359150808211156108b957600080fd5b6108c58b838c016106f8565b955060808a01359150808211156108db57600080fd5b6108e78b838c01610767565b945060a08a01359150808211156108fd57600080fd5b6109098b838c016107d9565b935060c08a013591508082111561091f57600080fd5b5061092c8a828b0161060f565b91505092959891949750929550565b60008060008060008060c0878903121561095457600080fd5b61095d87610594565b9550602087013567ffffffffffffffff8082111561097a57600080fd5b6109868a838b0161060f565b9650604089013591508082111561099c57600080fd5b6109a88a838b0161060f565b955060608901359150808211156109be57600080fd5b6109ca8a838b01610767565b945060808901359150808211156109e057600080fd5b6109ec8a838b016107d9565b935060a0890135915080821115610a0257600080fd5b50610a0f89828a0161060f565b9150509295509295509295565b60008060008060808587031215610a3257600080fd5b8435610a3d8161057c565b9350602085013567ffffffffffffffff80821115610a5a57600080fd5b610a668883890161060f565b94506040870135915080821115610a7c57600080fd5b610a888883890161060f565b93506060870135915080821115610a9e57600080fd5b50610aab87828801610767565b91505092959194509250565b600080600080600060a08688031215610acf57600080fd5b8535610ada8161057c565b9450602086013567ffffffffffffffff80821115610af757600080fd5b610b0389838a0161060f565b95506040880135915080821115610b1957600080fd5b610b2589838a0161060f565b945060608801359150610b378261057c565b90925060808701359080821115610b4d57600080fd5b50610b5a88828901610767565b9150509295509295909350565b6020808252600c908201526b494e56414c49445f53495a4560a01b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6000815180845260005b81811015610bc957602081850181015186830182015201610bad565b506000602082860101526020601f19601f83011685010191505092915050565b60c081526000610bfc60c0830189610ba3565b8281036020840152610c0e8189610ba3565b6001600160a01b038816604085015267ffffffffffffffff871660608501526080840186905283810360a08501529050610c488185610ba3565b9998505050505050505050565b600060018201610c7557634e487b7160e01b600052601160045260246000fd5b5060010190565b60a081526000610c8f60a0830188610ba3565b8281036020840152610ca18188610ba3565b905067ffffffffffffffff861660408401528460608401528281036080840152610ccb8185610ba3565b98975050505050505050565b606081526000610cea6060830186610ba3565b8281036020840152610cfc8186610ba3565b91505067ffffffffffffffff83166040830152949350505050565b608081526000610d2a6080830187610ba3565b8281036020840152610d3c8187610ba3565b6001600160a01b03959095166040840152505067ffffffffffffffff919091166060909101529291505056fea26469706673582212207cc61e30f2c7e284801c43c9dcea8cf69c9799aceab1d97354ff3dbd6e909f0264736f6c63430008110033";

export class BatchRegistrarController__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BatchRegistrarController> {
    return super.deploy(overrides || {}) as Promise<BatchRegistrarController>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): BatchRegistrarController {
    return super.attach(address) as BatchRegistrarController;
  }
  connect(signer: Signer): BatchRegistrarController__factory {
    return super.connect(signer) as BatchRegistrarController__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchRegistrarControllerInterface {
    return new utils.Interface(_abi) as BatchRegistrarControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BatchRegistrarController {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BatchRegistrarController;
  }
}
